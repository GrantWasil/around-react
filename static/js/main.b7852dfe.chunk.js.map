{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","cardDeleteButtonClassName","card","owner","_id","cardLikeButtonClassName","likes","some","i","aria-label","type","onClick","onCardDelete","link","name","handleCardClick","onCardLike","length","Main","Provider","value","avatar","handleEditAvatarClick","about","handleEditProfileClick","handleAddPlaceClick","cards","map","key","Footer","PopupWithForm","isOpen","onClose","title","noValidate","onSubmit","handleSubmit","children","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","placeholder","minLength","maxLength","required","onChange","target","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","url","setUrl","onAddPlace","ImagePopup","api","baseUrl","headers","this","_baseUrl","_headers","fetch","then","res","ok","json","Promise","reject","status","method","body","JSON","stringify","likeState","likeMethod","authorization","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getInitialCards","catch","err","console","log","getProfileData","isLiked","changeLikeCardStatus","newCard","newCards","c","deleteCard","deletedCard","filter","createNewCard","updateUserImage","updateProfileData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.b7852dfe.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from \"../images/logo.svg\"\r\n\r\nfunction Header() {\r\n    return (\r\n      <header className=\"header container\">\r\n        <img className=\"logo\" src={logo} alt=\"Around the US Logo\" />\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n\r\n    const cardDeleteButtonClassName = isOwn ? `element__delete` : `element__delete_hidden`; \r\n    const cardLikeButtonClassName = isLiked ? `element__info-like element__info-like_active` : `element__info-like`;\r\n\r\n    function handleClick() {\r\n        props.handleCardClick(props.card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props.card);\r\n    }\r\n\r\n    return (\r\n        <div className=\"element\">\r\n            <button className={cardDeleteButtonClassName} aria-label=\"Remove\" type=\"button\" onClick={handleDeleteClick}></button>\r\n            <img className=\"element__image\" src={props.card.link} alt={`Image of ` + props.card.name} onClick={handleClick}/>\r\n            <div className=\"element__info\">\r\n                <h2 className=\"element__info-name\">{props.card.name}</h2>\r\n                <div className=\"element__info-right\">\r\n                    <button className={cardLikeButtonClassName} aria-label=\"Like\" type=\"button\" onClick={handleLikeClick}></button>\r\n                    <p className=\"element__info-count\">{props.card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Card from \"./Card.js\"\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <main>\r\n        <section className=\"profile container\">\r\n          <img className=\"profile__avatar\" alt=\"The profile picture of the user\" src={currentUser.avatar} onClick={props.handleEditAvatarClick} />\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__info-name\">{currentUser.name}</h1>\r\n            <p className=\"profile__info-title\">{currentUser.about}</p>\r\n          </div>\r\n          <button className=\"btn btn-edit\" aria-label=\"Edit\" type=\"button\" onClick={props.handleEditProfileClick}></button>\r\n          <button className=\"btn btn-new\" aria-label=\"New\" type=\"button\" onClick={props.handleAddPlaceClick}></button>\r\n        </section>\r\n\r\n        <section className=\"elements container\">\r\n          {props.cards.map((card, i) => (\r\n            <Card card={card} key={i} handleCardClick={props.handleCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>\r\n          ))}\r\n        </section>\r\n\r\n      </main>\r\n      </CurrentUserContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Main","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n      <footer className=\"footer container\">\r\n        <p className=\"footer__copyright\">© 2020 Around The U.S.</p>\r\n      </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n  return (\r\n    <section className={props.isOpen\r\n      ? `popup_opened popup popup-${props.name}`\r\n      : `popup popup-${props.name}`}>\r\n      <div className=\"popup__overlay\" onClick={props.onClose}></div>\r\n      <div className=\"popup__container\">\r\n        <h3 className=\"popup__container-title\">{props.title}</h3>\r\n        <form className=\"popup__form\" noValidate onSubmit={props.handleSubmit}>\r\n          {props.children}\r\n        </form>\r\n      </div>\r\n    </section>\r\n  )\r\n\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup(props) {\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser])\r\n\r\n    function handleNameChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleDescriptionChange(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onUpdateUser(\r\n            name,\r\n            description\r\n        );\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"edit\" title=\"Edit Profile\" isOpen={props.isOpen} onClose={props.onClose} handleSubmit={handleSubmit}>\r\n            <fieldset className=\"popup__field\">\r\n                <input className=\"popup__container-name popup__input\" id=\"newName-input\" placeholder=\"Name\" type=\"text\" name=\"text\" minLength=\"2\" maxLength=\"40\" required onChange={handleNameChange} value={name}/>\r\n                <span className=\"popup__input-error\" id=\"newName-input-error\"></span>\r\n                <input className=\"popup__container-about popup__input\" id=\"newAbout-input\" placeholder=\"About me\" type=\"text\" name=\"about\" minLength=\"2\" maxLength=\"200\" required onChange={handleDescriptionChange} value={description}/>\r\n                <span className=\"popup__input-error\" id=\"newAbout-input-error\"></span>\r\n                <button className=\"popup__container-save\" type=\"submit\">Save</button>\r\n                <button className=\"popup__close\" aria-label=\"Close\" type=\"reset\" onClick={props.onClose}></button>\r\n            </fieldset>\r\n      </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onUpdateAvatar(\r\n            avatarRef.current.value\r\n        )\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"photo\" title=\"Change profile picture\" isOpen={props.isOpen} onClose={props.onClose} handleSubmit={handleSubmit}>\r\n          <input ref={avatarRef} className=\"popup__container-about popup__input\" id=\"photo-input\" placeholder=\"Image URL\" name=\"link\" type=\"URL\" required/>\r\n          <span className=\"popup__input-error\" id=\"photo-input-error\"></span>\r\n          <button className=\"popup__container-save delete__save\" type=\"submit\">Save</button>\r\n          <button className=\"popup__close\" aria-label=\"Close\" type=\"reset\" onClick={props.onClose}></button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n    const [name, setName] = React.useState('');\r\n    const [url, setUrl] = React.useState('');\r\n\r\n    function handleNameChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleUrlChange(e) {\r\n        setUrl(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onAddPlace(\r\n            name,\r\n            url\r\n        )\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"new\" title=\"New Place\" isOpen={props.isOpen} onClose={props.onClose} handleSubmit={handleSubmit}>\r\n            <fieldset className=\"popup__field\">\r\n            <input className=\"popup__container-name popup__input\" id=\"name-input\" placeholder=\"Title\" type=\"text\" name=\"name\" minLength=\"2\" maxLength=\"30\" required value={name} onChange={handleNameChange}/>\r\n            <span className=\"popup__input-error\" id=\"name-input-error\"></span>\r\n            <input className=\"popup__container-about popup__input\" id=\"about-input\" placeholder=\"Image URL\" name=\"link\" type=\"URL\" required value={url} onChange={handleUrlChange}/>\r\n            <span className=\"popup__input-error\" id=\"about-input-error\"></span>\r\n            <button className=\"popup__container-save\" type=\"submit\">Save</button>\r\n            <button className=\"popup__close\" aria-label=\"Close\" type=\"reset\" onClick={props.onClose}></button>\r\n            </fieldset>\r\n      </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from \"react\"\r\n\r\nfunction ImagePopup(props) {\r\n\r\n    return (\r\n        <>\r\n        {\r\n            props.card.link ?\r\n                <section className=\"picture popup_opened\">\r\n                    <div className=\"popup__overlay\" onClick={props.onClose}></div>\r\n                    <div className=\"picture__container\">\r\n                        <button className=\"popup__close picture__container-close\" aria-label=\"Close\" type=\"button\" onClick={props.onClose}></button>\r\n                        <img className=\"picture__container-image\" src={props.card.link} alt={props.card.name} />\r\n                        <p className=\"picture__container-title\">{props.card.name}</p>\r\n                    </div>\r\n                </section>\r\n                : \r\n                <section className=\"picture popup\">\r\n                    <div className=\"popup__overlay\" onClick={props.onClose}></div>\r\n                    <div className=\"picture__container\">\r\n                        <button className=\"popup__close picture__container-close\" aria-label=\"Close\" type=\"button\" onClick={props.onClose}></button>\r\n                        <img className=\"picture__container-image\" src={props.card.link} alt={props.card.name} />\r\n                        <p className=\"picture__container-title\">{props.card.name}</p>\r\n                    </div>\r\n                </section>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImagePopup;","class Api {\r\n    constructor({ baseUrl, headers }) {\r\n        this._baseUrl = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}/cards`, { headers: this._headers })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    getProfileData() {\r\n        return fetch(`${this._baseUrl}/users/me`, { headers: this._headers })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    createNewCard(name, link) {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name,\r\n                link\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Error: ${res.status}`);\r\n        });\r\n    }\r\n\r\n    updateUserImage(avatar) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Error: ${res.status}`);\r\n        });\r\n    }\r\n\r\n    updateProfileData(name, about) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name, about\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Error: ${res.status}`);\r\n        });\r\n    }\r\n\r\n    changeLikeCardStatus(card, likeState) {\r\n        const likeMethod = likeState ? `PUT` : 'DELETE';\r\n        return fetch(`${this._baseUrl}/cards/likes/${card}`, {\r\n            method: likeMethod,\r\n            headers: this._headers,\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    deleteCard(card) {\r\n        return fetch(`${this._baseUrl}/cards/${card}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            });\r\n    }\r\n}\r\n\r\n\r\nconst api = new Api({\r\n    baseUrl: \"https://around.nomoreparties.co/v1/group-4\",\r\n    headers: {\r\n        authorization: \"cf891b37-8c41-4e79-9006-bc8a3becbc32\",\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n});\r\n\r\nexport default api; ","import React from 'react';\r\nimport Header from \"./Header.js\"\r\nimport Main from \"./Main.js\"\r\nimport Footer from \"./Footer.js\"\r\nimport PopupWithForm from \"./PopupWithForm.js\"\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport api from '../utils/Api.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    api.getInitialCards()\r\n      .then((res) => {\r\n        setCards(res)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Error: ${err}`);\r\n      })\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    api.getProfileData()\r\n      .then((res) => {\r\n        setCurrentUser(\r\n          res\r\n        )\r\n      })\r\n  }, [])\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      setCards(newCards);\r\n    })\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api.deleteCard(card._id).then((deletedCard) => {\r\n      const newCards = cards.filter((c) => c._id != card._id);\r\n      setCards(newCards);\r\n    })\r\n  }\r\n\r\n  function onEditAvatar() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function onEditProfile() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function onAddPlace() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(e) {\r\n    setSelectedCard(e)\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setSelectedCard({});\r\n  }\r\n\r\n  function handleUpdateUser(name, about) {\r\n    api.updateProfileData(name, about)\r\n      .then((res) => {\r\n        setCurrentUser(res)\r\n        closeAllPopups();\r\n      })\r\n  }\r\n\r\n  function handleUpdateAvatar(avatar) {\r\n    api.updateUserImage(avatar)\r\n      .then((res) => {\r\n        setCurrentUser(res)\r\n        closeAllPopups();\r\n      })\r\n  }\r\n\r\n  function handlePlaceSubmit(name, url) {\r\n    api.createNewCard(name, url)\r\n      .then((res) => {\r\n        setCards([res, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n\r\n      <div className=\"page\">\r\n        <Header />\r\n\r\n        <Main\r\n          handleEditAvatarClick={onEditAvatar}\r\n          handleEditProfileClick={onEditProfile}\r\n          handleAddPlaceClick={onAddPlace}\r\n          handleCardClick={handleCardClick}\r\n          cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n        />\r\n\r\n        <PopupWithForm name=\"delete\" title=\"Are you sure?\" onClose={closeAllPopups}>\r\n          <button className=\"popup__container-save delete__save\" type=\"submit\">Yes</button>\r\n        </PopupWithForm>\r\n\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handlePlaceSubmit}/>\r\n\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\r\n\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}/>\r\n\r\n\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n\r\n        <Footer />\r\n        <template id=\"element\">\r\n          <div className=\"element\">\r\n            <button className=\"element__delete\" aria-label=\"Remove\" type=\"button\"></button>\r\n            <img className=\"element__image\" />\r\n            <div className=\"element__info\">\r\n              <h2 className=\"element__info-name\"></h2>\r\n              <div className=\"element__info-right\">\r\n                <button className=\"element__info-like\" aria-label=\"Like\" type=\"button\"></button>\r\n                <p className=\"element__info-count\">1</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3e6893cd.svg\";"],"sourceRoot":""}